version: "3.9"

services:
  server:
    # image: 'nginx:stable-alpine'
    build:
      context: .
      dockerfile: dockerfiles/nginx.dockerfile
    ports:
      - 80
      - 443
    volumes:
      - ./src:/var/www/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - php
      - redis
      - mysql
      - mailhog
    container_name: laravel_enviroment_server
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.laradock.rule=Host(`laradock.localhost`)"
      - "traefik.http.routers.laradock.entrypoints=web"
      - "traefik.http.services.laradock.loadbalancer.server.port=80"
      - "traefik.docker.network=proxy"
    networks:
      - proxy
      - laravel_enviroment
    # extra_hosts:
    #  - "host.docker.internal:host-gateway"
  php:
    build:
      context: .
      dockerfile: dockerfiles/php.dockerfile
    volumes:
      - ./src:/var/www/html:delegated
    container_name: php_laravel_enviroment
    networks:
      - laravel_enviroment
  
  mysql:
    image: mysql:8.0.1
    restart: unless-stopped
    tty: true
    container_name: mysql_laravel_enviroment
    env_file:
      - env/db.env
    ports:
      - 3306
    networks:
      - laravel_enviroment
    volumes:
      - ./data:/var/lib/mysql
    
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    restart: always
    container_name: phpmyadmin_laravel_enviroment
    depends_on:
      - mysql
    ports:
      - '80'
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dblaradock.rule=Host(`dblaradock.localhost`)"
      - "traefik.http.routers.dblaradock.entrypoints=web"
      - "traefik.http.services.dblaradock.loadbalancer.server.port=80"
      - "traefik.docker.network=proxy"
    env_file:
      - env/db.env
    environment:
      # - PMA_HOST=mysql
      # - PMA_USER=laraveldocker
      # - PMA_PASSWORD=laraveldocker
      - UPLOAD_LIMIT=30000000
    networks:
      - proxy
      - laravel_enviroment
  
  redis:
    image: redis:alpine
    container_name: redis_laravel_enviroment
    restart: unless-stopped
    ports:
      - 6379
    networks:
      - laravel_enviroment
    command: redis-server --appendonly yes --replica-read-only no

  composer:
    build:
      context: ./dockerfiles
      dockerfile: composer.dockerfile
    volumes:
      - ./src:/var/www/html
    depends_on:
      - php
    networks:
      - laravel_enviroment
  
  artisan:
    build:
      context: .
      dockerfile: dockerfiles/php.dockerfile
    volumes:
      - ./src:/var/www/html
    entrypoint: ["php", "/var/www/html/artisan"]
      #depends_on:
    #- mysql
    networks:
      - laravel_enviroment
  
  scheduler:
    build:
      context: .
      dockerfile: dockerfiles/php.dockerfile
    container_name: scheduler_laravel_enviroment
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    entrypoint: [ "php", "artisan", "schedule:work" ]
    networks:
      - laravel_enviroment
    
  mailhog:
    image: mailhog/mailhog:latest
    container_name: mailhog_laravel_enviroment
    ports:
      - 1025
      - 8025
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dblaradockmail.rule=Host(`mailhog.dblaradock.localhost`)"
      - "traefik.http.routers.dblaradockmail.entrypoints=web"
      - "traefik.http.services.dblaradockmail.loadbalancer.server.port=8025"
      - "traefik.docker.network=proxy"
    networks:
      - proxy
      - laravel_enviroment

networks:
  proxy:
    external:
      name: proxy
  laravel_enviroment:
    driver: bridge

